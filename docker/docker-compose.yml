version: "0.0.1"

services:
  inference:
    image: taskingai-inference:1.1.0
    expose:
      - "8002"
    environment:
      AES_ENCRYPTION_KEY: b90e4648ad699c3bdf62c0860e09eb9efc098ee75f215bf750847ae19d41e4b0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/v1/health_check"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend-api:
    image: taskingai-backend:0.0.1
    ports:
      - "8000:8000"
    environment:
      POSTGRES_URL: postgres://postgres:TaskingAI321@db:5432/taskingai
      REDIS_URL: redis://:TaskingAI321@cache:6379/0
      TASKINGAI_INFERENCE_URL: http://localhost:8002
      AES_ENCRYPTION_KEY: b90e4648ad699c3bdf62c0860e09eb9efc098ee75f215bf750847ae19d41e4b0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/v1/health_check"]
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      - db
      - cache

  backend-web:
    image: taskingai-backend:0.0.1
    ports:
      - "8001:8001"
    environment:
      POSTGRES_URL: postgres://postgres:TaskingAI321@db:5432/taskingai
      REDIS_URL: redis://:TaskingAI321@cache:6379/0
      TASKINGAI_INFERENCE_URL: http://localhost:8002
      AES_ENCRYPTION_KEY: b90e4648ad699c3bdf62c0860e09eb9efc098ee75f215bf750847ae19d41e4b0
      PURPOSE: WEB
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/v1/health_check"]
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      - db
      - cache

  #  frontend:
  #    image: your-frontend-image
  #    ports:
  #      - "80:80"
  #    depends_on:
  #      - backend1
  #      - backend2

  db:
    image: ankane/pgvector:v0.5.1
    #    ports:
    #      - "5432"
    environment:
      POSTGRES_DB: taskingai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: TaskingAI321
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

  cache:
    image: redis:7-alpine
    command: ["redis-server", "--requirepass", "TaskingAI321"]
    #    ports:
    #      - "6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "auth", "password", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

volumes:
  postgres_data:
  redis_data:
